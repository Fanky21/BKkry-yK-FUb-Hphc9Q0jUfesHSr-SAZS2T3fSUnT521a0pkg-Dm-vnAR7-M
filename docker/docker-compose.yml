services:
  redis:
    image: redis:7-alpine
    ports:
      - "16379:6379"
    volumes:
      - redis-data:/data
    networks:
      - distributed-net
    command: redis-server --appendonly yes

  node-1:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    container_name: node-1
    environment:
      - NODE_ID=node-1
      - NODE_HOST=0.0.0.0
      - NODE_PORT=5000
      - CLUSTER_NODES=node-2:5000,node-3:5000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    ports:
      - "15000:5000"
    volumes:
      - node1-data:/app/data
    networks:
      - distributed-net
    depends_on:
      - redis
    restart: unless-stopped

  node-2:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    container_name: node-2
    environment:
      - NODE_ID=node-2
      - NODE_HOST=0.0.0.0
      - NODE_PORT=5000
      - CLUSTER_NODES=node-1:5000,node-3:5000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    ports:
      - "15001:5000"
    volumes:
      - node2-data:/app/data
    networks:
      - distributed-net
    depends_on:
      - redis
    restart: unless-stopped

  node-3:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    container_name: node-3
    environment:
      - NODE_ID=node-3
      - NODE_HOST=0.0.0.0
      - NODE_PORT=5000
      - CLUSTER_NODES=node-1:5000,node-2:5000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    ports:
      - "15002:5000"
    volumes:
      - node3-data:/app/data
    networks:
      - distributed-net
    depends_on:
      - redis
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "19090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - distributed-net
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "13000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - distributed-net
    depends_on:
      - prometheus

networks:
  distributed-net:
    driver: bridge

volumes:
  redis-data:
  node1-data:
  node2-data:
  node3-data:
  prometheus-data:
  grafana-data:
